/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: goctp.swigcxx

#ifndef SWIG_goctp_WRAP_H_
#define SWIG_goctp_WRAP_H_

class Swig_memory;

class SwigDirector_CThostFtdcTraderSpi : public CThostFtdcTraderSpi
{
 public:
  SwigDirector_CThostFtdcTraderSpi(int swig_p);
  void _swig_upcall_OnFrontConnected() {
    CThostFtdcTraderSpi::OnFrontConnected();
  }
  virtual void OnFrontConnected();
  void _swig_upcall_OnFrontDisconnected(int nReason) {
    CThostFtdcTraderSpi::OnFrontDisconnected(nReason);
  }
  virtual void OnFrontDisconnected(int nReason);
  void _swig_upcall_OnHeartBeatWarning(int nTimeLapse) {
    CThostFtdcTraderSpi::OnHeartBeatWarning(nTimeLapse);
  }
  virtual void OnHeartBeatWarning(int nTimeLapse);
  void _swig_upcall_OnRspAuthenticate(CThostFtdcRspAuthenticateField *pRspAuthenticateField, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspAuthenticate(pRspAuthenticateField,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspAuthenticate(CThostFtdcRspAuthenticateField *pRspAuthenticateField, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspUserLogin(CThostFtdcRspUserLoginField *pRspUserLogin, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspUserLogin(pRspUserLogin,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspUserLogin(CThostFtdcRspUserLoginField *pRspUserLogin, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspUserLogout(CThostFtdcUserLogoutField *pUserLogout, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspUserLogout(pUserLogout,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspUserLogout(CThostFtdcUserLogoutField *pUserLogout, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspUserPasswordUpdate(CThostFtdcUserPasswordUpdateField *pUserPasswordUpdate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspUserPasswordUpdate(pUserPasswordUpdate,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspUserPasswordUpdate(CThostFtdcUserPasswordUpdateField *pUserPasswordUpdate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspTradingAccountPasswordUpdate(CThostFtdcTradingAccountPasswordUpdateField *pTradingAccountPasswordUpdate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspTradingAccountPasswordUpdate(pTradingAccountPasswordUpdate,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspTradingAccountPasswordUpdate(CThostFtdcTradingAccountPasswordUpdateField *pTradingAccountPasswordUpdate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspUserAuthMethod(CThostFtdcRspUserAuthMethodField *pRspUserAuthMethod, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspUserAuthMethod(pRspUserAuthMethod,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspUserAuthMethod(CThostFtdcRspUserAuthMethodField *pRspUserAuthMethod, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspGenUserCaptcha(CThostFtdcRspGenUserCaptchaField *pRspGenUserCaptcha, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspGenUserCaptcha(pRspGenUserCaptcha,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspGenUserCaptcha(CThostFtdcRspGenUserCaptchaField *pRspGenUserCaptcha, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspGenUserText(CThostFtdcRspGenUserTextField *pRspGenUserText, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspGenUserText(pRspGenUserText,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspGenUserText(CThostFtdcRspGenUserTextField *pRspGenUserText, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspOrderInsert(CThostFtdcInputOrderField *pInputOrder, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspOrderInsert(pInputOrder,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspOrderInsert(CThostFtdcInputOrderField *pInputOrder, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspParkedOrderInsert(CThostFtdcParkedOrderField *pParkedOrder, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspParkedOrderInsert(pParkedOrder,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspParkedOrderInsert(CThostFtdcParkedOrderField *pParkedOrder, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspParkedOrderAction(CThostFtdcParkedOrderActionField *pParkedOrderAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspParkedOrderAction(pParkedOrderAction,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspParkedOrderAction(CThostFtdcParkedOrderActionField *pParkedOrderAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspOrderAction(CThostFtdcInputOrderActionField *pInputOrderAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspOrderAction(pInputOrderAction,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspOrderAction(CThostFtdcInputOrderActionField *pInputOrderAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryMaxOrderVolume(CThostFtdcQryMaxOrderVolumeField *pQryMaxOrderVolume, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryMaxOrderVolume(pQryMaxOrderVolume,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryMaxOrderVolume(CThostFtdcQryMaxOrderVolumeField *pQryMaxOrderVolume, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspSettlementInfoConfirm(CThostFtdcSettlementInfoConfirmField *pSettlementInfoConfirm, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspSettlementInfoConfirm(pSettlementInfoConfirm,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspSettlementInfoConfirm(CThostFtdcSettlementInfoConfirmField *pSettlementInfoConfirm, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspRemoveParkedOrder(CThostFtdcRemoveParkedOrderField *pRemoveParkedOrder, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspRemoveParkedOrder(pRemoveParkedOrder,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspRemoveParkedOrder(CThostFtdcRemoveParkedOrderField *pRemoveParkedOrder, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspRemoveParkedOrderAction(CThostFtdcRemoveParkedOrderActionField *pRemoveParkedOrderAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspRemoveParkedOrderAction(pRemoveParkedOrderAction,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspRemoveParkedOrderAction(CThostFtdcRemoveParkedOrderActionField *pRemoveParkedOrderAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspExecOrderInsert(CThostFtdcInputExecOrderField *pInputExecOrder, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspExecOrderInsert(pInputExecOrder,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspExecOrderInsert(CThostFtdcInputExecOrderField *pInputExecOrder, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspExecOrderAction(CThostFtdcInputExecOrderActionField *pInputExecOrderAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspExecOrderAction(pInputExecOrderAction,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspExecOrderAction(CThostFtdcInputExecOrderActionField *pInputExecOrderAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspForQuoteInsert(CThostFtdcInputForQuoteField *pInputForQuote, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspForQuoteInsert(pInputForQuote,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspForQuoteInsert(CThostFtdcInputForQuoteField *pInputForQuote, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQuoteInsert(CThostFtdcInputQuoteField *pInputQuote, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQuoteInsert(pInputQuote,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQuoteInsert(CThostFtdcInputQuoteField *pInputQuote, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQuoteAction(CThostFtdcInputQuoteActionField *pInputQuoteAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQuoteAction(pInputQuoteAction,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQuoteAction(CThostFtdcInputQuoteActionField *pInputQuoteAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspBatchOrderAction(CThostFtdcInputBatchOrderActionField *pInputBatchOrderAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspBatchOrderAction(pInputBatchOrderAction,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspBatchOrderAction(CThostFtdcInputBatchOrderActionField *pInputBatchOrderAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspOptionSelfCloseInsert(CThostFtdcInputOptionSelfCloseField *pInputOptionSelfClose, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspOptionSelfCloseInsert(pInputOptionSelfClose,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspOptionSelfCloseInsert(CThostFtdcInputOptionSelfCloseField *pInputOptionSelfClose, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspOptionSelfCloseAction(CThostFtdcInputOptionSelfCloseActionField *pInputOptionSelfCloseAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspOptionSelfCloseAction(pInputOptionSelfCloseAction,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspOptionSelfCloseAction(CThostFtdcInputOptionSelfCloseActionField *pInputOptionSelfCloseAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspCombActionInsert(CThostFtdcInputCombActionField *pInputCombAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspCombActionInsert(pInputCombAction,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspCombActionInsert(CThostFtdcInputCombActionField *pInputCombAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryOrder(CThostFtdcOrderField *pOrder, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryOrder(pOrder,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryOrder(CThostFtdcOrderField *pOrder, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryTrade(CThostFtdcTradeField *pTrade, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryTrade(pTrade,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryTrade(CThostFtdcTradeField *pTrade, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryInvestorPosition(CThostFtdcInvestorPositionField *pInvestorPosition, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryInvestorPosition(pInvestorPosition,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryInvestorPosition(CThostFtdcInvestorPositionField *pInvestorPosition, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryTradingAccount(CThostFtdcTradingAccountField *pTradingAccount, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryTradingAccount(pTradingAccount,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryTradingAccount(CThostFtdcTradingAccountField *pTradingAccount, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryInvestor(CThostFtdcInvestorField *pInvestor, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryInvestor(pInvestor,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryInvestor(CThostFtdcInvestorField *pInvestor, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryTradingCode(CThostFtdcTradingCodeField *pTradingCode, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryTradingCode(pTradingCode,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryTradingCode(CThostFtdcTradingCodeField *pTradingCode, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryInstrumentMarginRate(CThostFtdcInstrumentMarginRateField *pInstrumentMarginRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryInstrumentMarginRate(pInstrumentMarginRate,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryInstrumentMarginRate(CThostFtdcInstrumentMarginRateField *pInstrumentMarginRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryInstrumentCommissionRate(CThostFtdcInstrumentCommissionRateField *pInstrumentCommissionRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryInstrumentCommissionRate(pInstrumentCommissionRate,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryInstrumentCommissionRate(CThostFtdcInstrumentCommissionRateField *pInstrumentCommissionRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryExchange(CThostFtdcExchangeField *pExchange, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryExchange(pExchange,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryExchange(CThostFtdcExchangeField *pExchange, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryProduct(CThostFtdcProductField *pProduct, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryProduct(pProduct,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryProduct(CThostFtdcProductField *pProduct, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryInstrument(CThostFtdcInstrumentField *pInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryInstrument(pInstrument,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryInstrument(CThostFtdcInstrumentField *pInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryDepthMarketData(CThostFtdcDepthMarketDataField *pDepthMarketData, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryDepthMarketData(pDepthMarketData,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryDepthMarketData(CThostFtdcDepthMarketDataField *pDepthMarketData, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQrySettlementInfo(CThostFtdcSettlementInfoField *pSettlementInfo, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQrySettlementInfo(pSettlementInfo,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQrySettlementInfo(CThostFtdcSettlementInfoField *pSettlementInfo, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryTransferBank(CThostFtdcTransferBankField *pTransferBank, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryTransferBank(pTransferBank,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryTransferBank(CThostFtdcTransferBankField *pTransferBank, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryInvestorPositionDetail(CThostFtdcInvestorPositionDetailField *pInvestorPositionDetail, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryInvestorPositionDetail(pInvestorPositionDetail,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryInvestorPositionDetail(CThostFtdcInvestorPositionDetailField *pInvestorPositionDetail, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryNotice(CThostFtdcNoticeField *pNotice, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryNotice(pNotice,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryNotice(CThostFtdcNoticeField *pNotice, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQrySettlementInfoConfirm(CThostFtdcSettlementInfoConfirmField *pSettlementInfoConfirm, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQrySettlementInfoConfirm(pSettlementInfoConfirm,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQrySettlementInfoConfirm(CThostFtdcSettlementInfoConfirmField *pSettlementInfoConfirm, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryInvestorPositionCombineDetail(CThostFtdcInvestorPositionCombineDetailField *pInvestorPositionCombineDetail, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryInvestorPositionCombineDetail(pInvestorPositionCombineDetail,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryInvestorPositionCombineDetail(CThostFtdcInvestorPositionCombineDetailField *pInvestorPositionCombineDetail, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryCFMMCTradingAccountKey(CThostFtdcCFMMCTradingAccountKeyField *pCFMMCTradingAccountKey, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryCFMMCTradingAccountKey(pCFMMCTradingAccountKey,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryCFMMCTradingAccountKey(CThostFtdcCFMMCTradingAccountKeyField *pCFMMCTradingAccountKey, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryEWarrantOffset(CThostFtdcEWarrantOffsetField *pEWarrantOffset, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryEWarrantOffset(pEWarrantOffset,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryEWarrantOffset(CThostFtdcEWarrantOffsetField *pEWarrantOffset, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryInvestorProductGroupMargin(CThostFtdcInvestorProductGroupMarginField *pInvestorProductGroupMargin, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryInvestorProductGroupMargin(pInvestorProductGroupMargin,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryInvestorProductGroupMargin(CThostFtdcInvestorProductGroupMarginField *pInvestorProductGroupMargin, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryExchangeMarginRate(CThostFtdcExchangeMarginRateField *pExchangeMarginRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryExchangeMarginRate(pExchangeMarginRate,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryExchangeMarginRate(CThostFtdcExchangeMarginRateField *pExchangeMarginRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryExchangeMarginRateAdjust(CThostFtdcExchangeMarginRateAdjustField *pExchangeMarginRateAdjust, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryExchangeMarginRateAdjust(pExchangeMarginRateAdjust,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryExchangeMarginRateAdjust(CThostFtdcExchangeMarginRateAdjustField *pExchangeMarginRateAdjust, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryExchangeRate(CThostFtdcExchangeRateField *pExchangeRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryExchangeRate(pExchangeRate,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryExchangeRate(CThostFtdcExchangeRateField *pExchangeRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQrySecAgentACIDMap(CThostFtdcSecAgentACIDMapField *pSecAgentACIDMap, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQrySecAgentACIDMap(pSecAgentACIDMap,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQrySecAgentACIDMap(CThostFtdcSecAgentACIDMapField *pSecAgentACIDMap, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryProductExchRate(CThostFtdcProductExchRateField *pProductExchRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryProductExchRate(pProductExchRate,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryProductExchRate(CThostFtdcProductExchRateField *pProductExchRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryProductGroup(CThostFtdcProductGroupField *pProductGroup, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryProductGroup(pProductGroup,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryProductGroup(CThostFtdcProductGroupField *pProductGroup, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryMMInstrumentCommissionRate(CThostFtdcMMInstrumentCommissionRateField *pMMInstrumentCommissionRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryMMInstrumentCommissionRate(pMMInstrumentCommissionRate,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryMMInstrumentCommissionRate(CThostFtdcMMInstrumentCommissionRateField *pMMInstrumentCommissionRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryMMOptionInstrCommRate(CThostFtdcMMOptionInstrCommRateField *pMMOptionInstrCommRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryMMOptionInstrCommRate(pMMOptionInstrCommRate,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryMMOptionInstrCommRate(CThostFtdcMMOptionInstrCommRateField *pMMOptionInstrCommRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryInstrumentOrderCommRate(CThostFtdcInstrumentOrderCommRateField *pInstrumentOrderCommRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryInstrumentOrderCommRate(pInstrumentOrderCommRate,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryInstrumentOrderCommRate(CThostFtdcInstrumentOrderCommRateField *pInstrumentOrderCommRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQrySecAgentTradingAccount(CThostFtdcTradingAccountField *pTradingAccount, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQrySecAgentTradingAccount(pTradingAccount,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQrySecAgentTradingAccount(CThostFtdcTradingAccountField *pTradingAccount, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQrySecAgentCheckMode(CThostFtdcSecAgentCheckModeField *pSecAgentCheckMode, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQrySecAgentCheckMode(pSecAgentCheckMode,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQrySecAgentCheckMode(CThostFtdcSecAgentCheckModeField *pSecAgentCheckMode, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQrySecAgentTradeInfo(CThostFtdcSecAgentTradeInfoField *pSecAgentTradeInfo, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQrySecAgentTradeInfo(pSecAgentTradeInfo,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQrySecAgentTradeInfo(CThostFtdcSecAgentTradeInfoField *pSecAgentTradeInfo, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryOptionInstrTradeCost(CThostFtdcOptionInstrTradeCostField *pOptionInstrTradeCost, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryOptionInstrTradeCost(pOptionInstrTradeCost,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryOptionInstrTradeCost(CThostFtdcOptionInstrTradeCostField *pOptionInstrTradeCost, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryOptionInstrCommRate(CThostFtdcOptionInstrCommRateField *pOptionInstrCommRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryOptionInstrCommRate(pOptionInstrCommRate,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryOptionInstrCommRate(CThostFtdcOptionInstrCommRateField *pOptionInstrCommRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryExecOrder(CThostFtdcExecOrderField *pExecOrder, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryExecOrder(pExecOrder,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryExecOrder(CThostFtdcExecOrderField *pExecOrder, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryForQuote(CThostFtdcForQuoteField *pForQuote, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryForQuote(pForQuote,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryForQuote(CThostFtdcForQuoteField *pForQuote, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryQuote(CThostFtdcQuoteField *pQuote, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryQuote(pQuote,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryQuote(CThostFtdcQuoteField *pQuote, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryOptionSelfClose(CThostFtdcOptionSelfCloseField *pOptionSelfClose, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryOptionSelfClose(pOptionSelfClose,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryOptionSelfClose(CThostFtdcOptionSelfCloseField *pOptionSelfClose, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryInvestUnit(CThostFtdcInvestUnitField *pInvestUnit, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryInvestUnit(pInvestUnit,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryInvestUnit(CThostFtdcInvestUnitField *pInvestUnit, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryCombInstrumentGuard(CThostFtdcCombInstrumentGuardField *pCombInstrumentGuard, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryCombInstrumentGuard(pCombInstrumentGuard,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryCombInstrumentGuard(CThostFtdcCombInstrumentGuardField *pCombInstrumentGuard, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryCombAction(CThostFtdcCombActionField *pCombAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryCombAction(pCombAction,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryCombAction(CThostFtdcCombActionField *pCombAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryTransferSerial(CThostFtdcTransferSerialField *pTransferSerial, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryTransferSerial(pTransferSerial,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryTransferSerial(CThostFtdcTransferSerialField *pTransferSerial, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryAccountregister(CThostFtdcAccountregisterField *pAccountregister, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryAccountregister(pAccountregister,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryAccountregister(CThostFtdcAccountregisterField *pAccountregister, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspError(CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspError(pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspError(CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRtnOrder(CThostFtdcOrderField *pOrder) {
    CThostFtdcTraderSpi::OnRtnOrder(pOrder);
  }
  virtual void OnRtnOrder(CThostFtdcOrderField *pOrder);
  void _swig_upcall_OnRtnTrade(CThostFtdcTradeField *pTrade) {
    CThostFtdcTraderSpi::OnRtnTrade(pTrade);
  }
  virtual void OnRtnTrade(CThostFtdcTradeField *pTrade);
  void _swig_upcall_OnErrRtnOrderInsert(CThostFtdcInputOrderField *pInputOrder, CThostFtdcRspInfoField *pRspInfo) {
    CThostFtdcTraderSpi::OnErrRtnOrderInsert(pInputOrder,pRspInfo);
  }
  virtual void OnErrRtnOrderInsert(CThostFtdcInputOrderField *pInputOrder, CThostFtdcRspInfoField *pRspInfo);
  void _swig_upcall_OnErrRtnOrderAction(CThostFtdcOrderActionField *pOrderAction, CThostFtdcRspInfoField *pRspInfo) {
    CThostFtdcTraderSpi::OnErrRtnOrderAction(pOrderAction,pRspInfo);
  }
  virtual void OnErrRtnOrderAction(CThostFtdcOrderActionField *pOrderAction, CThostFtdcRspInfoField *pRspInfo);
  void _swig_upcall_OnRtnInstrumentStatus(CThostFtdcInstrumentStatusField *pInstrumentStatus) {
    CThostFtdcTraderSpi::OnRtnInstrumentStatus(pInstrumentStatus);
  }
  virtual void OnRtnInstrumentStatus(CThostFtdcInstrumentStatusField *pInstrumentStatus);
  void _swig_upcall_OnRtnBulletin(CThostFtdcBulletinField *pBulletin) {
    CThostFtdcTraderSpi::OnRtnBulletin(pBulletin);
  }
  virtual void OnRtnBulletin(CThostFtdcBulletinField *pBulletin);
  void _swig_upcall_OnRtnTradingNotice(CThostFtdcTradingNoticeInfoField *pTradingNoticeInfo) {
    CThostFtdcTraderSpi::OnRtnTradingNotice(pTradingNoticeInfo);
  }
  virtual void OnRtnTradingNotice(CThostFtdcTradingNoticeInfoField *pTradingNoticeInfo);
  void _swig_upcall_OnRtnErrorConditionalOrder(CThostFtdcErrorConditionalOrderField *pErrorConditionalOrder) {
    CThostFtdcTraderSpi::OnRtnErrorConditionalOrder(pErrorConditionalOrder);
  }
  virtual void OnRtnErrorConditionalOrder(CThostFtdcErrorConditionalOrderField *pErrorConditionalOrder);
  void _swig_upcall_OnRtnExecOrder(CThostFtdcExecOrderField *pExecOrder) {
    CThostFtdcTraderSpi::OnRtnExecOrder(pExecOrder);
  }
  virtual void OnRtnExecOrder(CThostFtdcExecOrderField *pExecOrder);
  void _swig_upcall_OnErrRtnExecOrderInsert(CThostFtdcInputExecOrderField *pInputExecOrder, CThostFtdcRspInfoField *pRspInfo) {
    CThostFtdcTraderSpi::OnErrRtnExecOrderInsert(pInputExecOrder,pRspInfo);
  }
  virtual void OnErrRtnExecOrderInsert(CThostFtdcInputExecOrderField *pInputExecOrder, CThostFtdcRspInfoField *pRspInfo);
  void _swig_upcall_OnErrRtnExecOrderAction(CThostFtdcExecOrderActionField *pExecOrderAction, CThostFtdcRspInfoField *pRspInfo) {
    CThostFtdcTraderSpi::OnErrRtnExecOrderAction(pExecOrderAction,pRspInfo);
  }
  virtual void OnErrRtnExecOrderAction(CThostFtdcExecOrderActionField *pExecOrderAction, CThostFtdcRspInfoField *pRspInfo);
  void _swig_upcall_OnErrRtnForQuoteInsert(CThostFtdcInputForQuoteField *pInputForQuote, CThostFtdcRspInfoField *pRspInfo) {
    CThostFtdcTraderSpi::OnErrRtnForQuoteInsert(pInputForQuote,pRspInfo);
  }
  virtual void OnErrRtnForQuoteInsert(CThostFtdcInputForQuoteField *pInputForQuote, CThostFtdcRspInfoField *pRspInfo);
  void _swig_upcall_OnRtnQuote(CThostFtdcQuoteField *pQuote) {
    CThostFtdcTraderSpi::OnRtnQuote(pQuote);
  }
  virtual void OnRtnQuote(CThostFtdcQuoteField *pQuote);
  void _swig_upcall_OnErrRtnQuoteInsert(CThostFtdcInputQuoteField *pInputQuote, CThostFtdcRspInfoField *pRspInfo) {
    CThostFtdcTraderSpi::OnErrRtnQuoteInsert(pInputQuote,pRspInfo);
  }
  virtual void OnErrRtnQuoteInsert(CThostFtdcInputQuoteField *pInputQuote, CThostFtdcRspInfoField *pRspInfo);
  void _swig_upcall_OnErrRtnQuoteAction(CThostFtdcQuoteActionField *pQuoteAction, CThostFtdcRspInfoField *pRspInfo) {
    CThostFtdcTraderSpi::OnErrRtnQuoteAction(pQuoteAction,pRspInfo);
  }
  virtual void OnErrRtnQuoteAction(CThostFtdcQuoteActionField *pQuoteAction, CThostFtdcRspInfoField *pRspInfo);
  void _swig_upcall_OnRtnForQuoteRsp(CThostFtdcForQuoteRspField *pForQuoteRsp) {
    CThostFtdcTraderSpi::OnRtnForQuoteRsp(pForQuoteRsp);
  }
  virtual void OnRtnForQuoteRsp(CThostFtdcForQuoteRspField *pForQuoteRsp);
  void _swig_upcall_OnRtnCFMMCTradingAccountToken(CThostFtdcCFMMCTradingAccountTokenField *pCFMMCTradingAccountToken) {
    CThostFtdcTraderSpi::OnRtnCFMMCTradingAccountToken(pCFMMCTradingAccountToken);
  }
  virtual void OnRtnCFMMCTradingAccountToken(CThostFtdcCFMMCTradingAccountTokenField *pCFMMCTradingAccountToken);
  void _swig_upcall_OnErrRtnBatchOrderAction(CThostFtdcBatchOrderActionField *pBatchOrderAction, CThostFtdcRspInfoField *pRspInfo) {
    CThostFtdcTraderSpi::OnErrRtnBatchOrderAction(pBatchOrderAction,pRspInfo);
  }
  virtual void OnErrRtnBatchOrderAction(CThostFtdcBatchOrderActionField *pBatchOrderAction, CThostFtdcRspInfoField *pRspInfo);
  void _swig_upcall_OnRtnOptionSelfClose(CThostFtdcOptionSelfCloseField *pOptionSelfClose) {
    CThostFtdcTraderSpi::OnRtnOptionSelfClose(pOptionSelfClose);
  }
  virtual void OnRtnOptionSelfClose(CThostFtdcOptionSelfCloseField *pOptionSelfClose);
  void _swig_upcall_OnErrRtnOptionSelfCloseInsert(CThostFtdcInputOptionSelfCloseField *pInputOptionSelfClose, CThostFtdcRspInfoField *pRspInfo) {
    CThostFtdcTraderSpi::OnErrRtnOptionSelfCloseInsert(pInputOptionSelfClose,pRspInfo);
  }
  virtual void OnErrRtnOptionSelfCloseInsert(CThostFtdcInputOptionSelfCloseField *pInputOptionSelfClose, CThostFtdcRspInfoField *pRspInfo);
  void _swig_upcall_OnErrRtnOptionSelfCloseAction(CThostFtdcOptionSelfCloseActionField *pOptionSelfCloseAction, CThostFtdcRspInfoField *pRspInfo) {
    CThostFtdcTraderSpi::OnErrRtnOptionSelfCloseAction(pOptionSelfCloseAction,pRspInfo);
  }
  virtual void OnErrRtnOptionSelfCloseAction(CThostFtdcOptionSelfCloseActionField *pOptionSelfCloseAction, CThostFtdcRspInfoField *pRspInfo);
  void _swig_upcall_OnRtnCombAction(CThostFtdcCombActionField *pCombAction) {
    CThostFtdcTraderSpi::OnRtnCombAction(pCombAction);
  }
  virtual void OnRtnCombAction(CThostFtdcCombActionField *pCombAction);
  void _swig_upcall_OnErrRtnCombActionInsert(CThostFtdcInputCombActionField *pInputCombAction, CThostFtdcRspInfoField *pRspInfo) {
    CThostFtdcTraderSpi::OnErrRtnCombActionInsert(pInputCombAction,pRspInfo);
  }
  virtual void OnErrRtnCombActionInsert(CThostFtdcInputCombActionField *pInputCombAction, CThostFtdcRspInfoField *pRspInfo);
  void _swig_upcall_OnRspQryContractBank(CThostFtdcContractBankField *pContractBank, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryContractBank(pContractBank,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryContractBank(CThostFtdcContractBankField *pContractBank, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryParkedOrder(CThostFtdcParkedOrderField *pParkedOrder, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryParkedOrder(pParkedOrder,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryParkedOrder(CThostFtdcParkedOrderField *pParkedOrder, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryParkedOrderAction(CThostFtdcParkedOrderActionField *pParkedOrderAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryParkedOrderAction(pParkedOrderAction,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryParkedOrderAction(CThostFtdcParkedOrderActionField *pParkedOrderAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryTradingNotice(CThostFtdcTradingNoticeField *pTradingNotice, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryTradingNotice(pTradingNotice,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryTradingNotice(CThostFtdcTradingNoticeField *pTradingNotice, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryBrokerTradingParams(CThostFtdcBrokerTradingParamsField *pBrokerTradingParams, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryBrokerTradingParams(pBrokerTradingParams,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryBrokerTradingParams(CThostFtdcBrokerTradingParamsField *pBrokerTradingParams, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryBrokerTradingAlgos(CThostFtdcBrokerTradingAlgosField *pBrokerTradingAlgos, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryBrokerTradingAlgos(pBrokerTradingAlgos,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryBrokerTradingAlgos(CThostFtdcBrokerTradingAlgosField *pBrokerTradingAlgos, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQueryCFMMCTradingAccountToken(CThostFtdcQueryCFMMCTradingAccountTokenField *pQueryCFMMCTradingAccountToken, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQueryCFMMCTradingAccountToken(pQueryCFMMCTradingAccountToken,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQueryCFMMCTradingAccountToken(CThostFtdcQueryCFMMCTradingAccountTokenField *pQueryCFMMCTradingAccountToken, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRtnFromBankToFutureByBank(CThostFtdcRspTransferField *pRspTransfer) {
    CThostFtdcTraderSpi::OnRtnFromBankToFutureByBank(pRspTransfer);
  }
  virtual void OnRtnFromBankToFutureByBank(CThostFtdcRspTransferField *pRspTransfer);
  void _swig_upcall_OnRtnFromFutureToBankByBank(CThostFtdcRspTransferField *pRspTransfer) {
    CThostFtdcTraderSpi::OnRtnFromFutureToBankByBank(pRspTransfer);
  }
  virtual void OnRtnFromFutureToBankByBank(CThostFtdcRspTransferField *pRspTransfer);
  void _swig_upcall_OnRtnRepealFromBankToFutureByBank(CThostFtdcRspRepealField *pRspRepeal) {
    CThostFtdcTraderSpi::OnRtnRepealFromBankToFutureByBank(pRspRepeal);
  }
  virtual void OnRtnRepealFromBankToFutureByBank(CThostFtdcRspRepealField *pRspRepeal);
  void _swig_upcall_OnRtnRepealFromFutureToBankByBank(CThostFtdcRspRepealField *pRspRepeal) {
    CThostFtdcTraderSpi::OnRtnRepealFromFutureToBankByBank(pRspRepeal);
  }
  virtual void OnRtnRepealFromFutureToBankByBank(CThostFtdcRspRepealField *pRspRepeal);
  void _swig_upcall_OnRtnFromBankToFutureByFuture(CThostFtdcRspTransferField *pRspTransfer) {
    CThostFtdcTraderSpi::OnRtnFromBankToFutureByFuture(pRspTransfer);
  }
  virtual void OnRtnFromBankToFutureByFuture(CThostFtdcRspTransferField *pRspTransfer);
  void _swig_upcall_OnRtnFromFutureToBankByFuture(CThostFtdcRspTransferField *pRspTransfer) {
    CThostFtdcTraderSpi::OnRtnFromFutureToBankByFuture(pRspTransfer);
  }
  virtual void OnRtnFromFutureToBankByFuture(CThostFtdcRspTransferField *pRspTransfer);
  void _swig_upcall_OnRtnRepealFromBankToFutureByFutureManual(CThostFtdcRspRepealField *pRspRepeal) {
    CThostFtdcTraderSpi::OnRtnRepealFromBankToFutureByFutureManual(pRspRepeal);
  }
  virtual void OnRtnRepealFromBankToFutureByFutureManual(CThostFtdcRspRepealField *pRspRepeal);
  void _swig_upcall_OnRtnRepealFromFutureToBankByFutureManual(CThostFtdcRspRepealField *pRspRepeal) {
    CThostFtdcTraderSpi::OnRtnRepealFromFutureToBankByFutureManual(pRspRepeal);
  }
  virtual void OnRtnRepealFromFutureToBankByFutureManual(CThostFtdcRspRepealField *pRspRepeal);
  void _swig_upcall_OnRtnQueryBankBalanceByFuture(CThostFtdcNotifyQueryAccountField *pNotifyQueryAccount) {
    CThostFtdcTraderSpi::OnRtnQueryBankBalanceByFuture(pNotifyQueryAccount);
  }
  virtual void OnRtnQueryBankBalanceByFuture(CThostFtdcNotifyQueryAccountField *pNotifyQueryAccount);
  void _swig_upcall_OnErrRtnBankToFutureByFuture(CThostFtdcReqTransferField *pReqTransfer, CThostFtdcRspInfoField *pRspInfo) {
    CThostFtdcTraderSpi::OnErrRtnBankToFutureByFuture(pReqTransfer,pRspInfo);
  }
  virtual void OnErrRtnBankToFutureByFuture(CThostFtdcReqTransferField *pReqTransfer, CThostFtdcRspInfoField *pRspInfo);
  void _swig_upcall_OnErrRtnFutureToBankByFuture(CThostFtdcReqTransferField *pReqTransfer, CThostFtdcRspInfoField *pRspInfo) {
    CThostFtdcTraderSpi::OnErrRtnFutureToBankByFuture(pReqTransfer,pRspInfo);
  }
  virtual void OnErrRtnFutureToBankByFuture(CThostFtdcReqTransferField *pReqTransfer, CThostFtdcRspInfoField *pRspInfo);
  void _swig_upcall_OnErrRtnRepealBankToFutureByFutureManual(CThostFtdcReqRepealField *pReqRepeal, CThostFtdcRspInfoField *pRspInfo) {
    CThostFtdcTraderSpi::OnErrRtnRepealBankToFutureByFutureManual(pReqRepeal,pRspInfo);
  }
  virtual void OnErrRtnRepealBankToFutureByFutureManual(CThostFtdcReqRepealField *pReqRepeal, CThostFtdcRspInfoField *pRspInfo);
  void _swig_upcall_OnErrRtnRepealFutureToBankByFutureManual(CThostFtdcReqRepealField *pReqRepeal, CThostFtdcRspInfoField *pRspInfo) {
    CThostFtdcTraderSpi::OnErrRtnRepealFutureToBankByFutureManual(pReqRepeal,pRspInfo);
  }
  virtual void OnErrRtnRepealFutureToBankByFutureManual(CThostFtdcReqRepealField *pReqRepeal, CThostFtdcRspInfoField *pRspInfo);
  void _swig_upcall_OnErrRtnQueryBankBalanceByFuture(CThostFtdcReqQueryAccountField *pReqQueryAccount, CThostFtdcRspInfoField *pRspInfo) {
    CThostFtdcTraderSpi::OnErrRtnQueryBankBalanceByFuture(pReqQueryAccount,pRspInfo);
  }
  virtual void OnErrRtnQueryBankBalanceByFuture(CThostFtdcReqQueryAccountField *pReqQueryAccount, CThostFtdcRspInfoField *pRspInfo);
  void _swig_upcall_OnRtnRepealFromBankToFutureByFuture(CThostFtdcRspRepealField *pRspRepeal) {
    CThostFtdcTraderSpi::OnRtnRepealFromBankToFutureByFuture(pRspRepeal);
  }
  virtual void OnRtnRepealFromBankToFutureByFuture(CThostFtdcRspRepealField *pRspRepeal);
  void _swig_upcall_OnRtnRepealFromFutureToBankByFuture(CThostFtdcRspRepealField *pRspRepeal) {
    CThostFtdcTraderSpi::OnRtnRepealFromFutureToBankByFuture(pRspRepeal);
  }
  virtual void OnRtnRepealFromFutureToBankByFuture(CThostFtdcRspRepealField *pRspRepeal);
  void _swig_upcall_OnRspFromBankToFutureByFuture(CThostFtdcReqTransferField *pReqTransfer, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspFromBankToFutureByFuture(pReqTransfer,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspFromBankToFutureByFuture(CThostFtdcReqTransferField *pReqTransfer, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspFromFutureToBankByFuture(CThostFtdcReqTransferField *pReqTransfer, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspFromFutureToBankByFuture(pReqTransfer,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspFromFutureToBankByFuture(CThostFtdcReqTransferField *pReqTransfer, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQueryBankAccountMoneyByFuture(CThostFtdcReqQueryAccountField *pReqQueryAccount, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQueryBankAccountMoneyByFuture(pReqQueryAccount,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQueryBankAccountMoneyByFuture(CThostFtdcReqQueryAccountField *pReqQueryAccount, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRtnOpenAccountByBank(CThostFtdcOpenAccountField *pOpenAccount) {
    CThostFtdcTraderSpi::OnRtnOpenAccountByBank(pOpenAccount);
  }
  virtual void OnRtnOpenAccountByBank(CThostFtdcOpenAccountField *pOpenAccount);
  void _swig_upcall_OnRtnCancelAccountByBank(CThostFtdcCancelAccountField *pCancelAccount) {
    CThostFtdcTraderSpi::OnRtnCancelAccountByBank(pCancelAccount);
  }
  virtual void OnRtnCancelAccountByBank(CThostFtdcCancelAccountField *pCancelAccount);
  void _swig_upcall_OnRtnChangeAccountByBank(CThostFtdcChangeAccountField *pChangeAccount) {
    CThostFtdcTraderSpi::OnRtnChangeAccountByBank(pChangeAccount);
  }
  virtual void OnRtnChangeAccountByBank(CThostFtdcChangeAccountField *pChangeAccount);
  void _swig_upcall_OnRspQryClassifiedInstrument(CThostFtdcInstrumentField *pInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryClassifiedInstrument(pInstrument,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryClassifiedInstrument(CThostFtdcInstrumentField *pInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryCombPromotionParam(CThostFtdcCombPromotionParamField *pCombPromotionParam, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcTraderSpi::OnRspQryCombPromotionParam(pCombPromotionParam,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryCombPromotionParam(CThostFtdcCombPromotionParamField *pCombPromotionParam, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
 private:
  intgo go_val;
  Swig_memory *swig_mem;
};

class SwigDirector_CThostFtdcMdSpi : public CThostFtdcMdSpi
{
 public:
  SwigDirector_CThostFtdcMdSpi(int swig_p);
  void _swig_upcall_OnFrontConnected() {
    CThostFtdcMdSpi::OnFrontConnected();
  }
  virtual void OnFrontConnected();
  void _swig_upcall_OnFrontDisconnected(int nReason) {
    CThostFtdcMdSpi::OnFrontDisconnected(nReason);
  }
  virtual void OnFrontDisconnected(int nReason);
  void _swig_upcall_OnHeartBeatWarning(int nTimeLapse) {
    CThostFtdcMdSpi::OnHeartBeatWarning(nTimeLapse);
  }
  virtual void OnHeartBeatWarning(int nTimeLapse);
  void _swig_upcall_OnRspUserLogin(CThostFtdcRspUserLoginField *pRspUserLogin, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcMdSpi::OnRspUserLogin(pRspUserLogin,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspUserLogin(CThostFtdcRspUserLoginField *pRspUserLogin, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspUserLogout(CThostFtdcUserLogoutField *pUserLogout, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcMdSpi::OnRspUserLogout(pUserLogout,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspUserLogout(CThostFtdcUserLogoutField *pUserLogout, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspQryMulticastInstrument(CThostFtdcMulticastInstrumentField *pMulticastInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcMdSpi::OnRspQryMulticastInstrument(pMulticastInstrument,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspQryMulticastInstrument(CThostFtdcMulticastInstrumentField *pMulticastInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspError(CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcMdSpi::OnRspError(pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspError(CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspSubMarketData(CThostFtdcSpecificInstrumentField *pSpecificInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcMdSpi::OnRspSubMarketData(pSpecificInstrument,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspSubMarketData(CThostFtdcSpecificInstrumentField *pSpecificInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspUnSubMarketData(CThostFtdcSpecificInstrumentField *pSpecificInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcMdSpi::OnRspUnSubMarketData(pSpecificInstrument,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspUnSubMarketData(CThostFtdcSpecificInstrumentField *pSpecificInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspSubForQuoteRsp(CThostFtdcSpecificInstrumentField *pSpecificInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcMdSpi::OnRspSubForQuoteRsp(pSpecificInstrument,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspSubForQuoteRsp(CThostFtdcSpecificInstrumentField *pSpecificInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRspUnSubForQuoteRsp(CThostFtdcSpecificInstrumentField *pSpecificInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
    CThostFtdcMdSpi::OnRspUnSubForQuoteRsp(pSpecificInstrument,pRspInfo,nRequestID,bIsLast);
  }
  virtual void OnRspUnSubForQuoteRsp(CThostFtdcSpecificInstrumentField *pSpecificInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
  void _swig_upcall_OnRtnDepthMarketData(CThostFtdcDepthMarketDataField *pDepthMarketData) {
    CThostFtdcMdSpi::OnRtnDepthMarketData(pDepthMarketData);
  }
  virtual void OnRtnDepthMarketData(CThostFtdcDepthMarketDataField *pDepthMarketData);
  void _swig_upcall_OnRtnForQuoteRsp(CThostFtdcForQuoteRspField *pForQuoteRsp) {
    CThostFtdcMdSpi::OnRtnForQuoteRsp(pForQuoteRsp);
  }
  virtual void OnRtnForQuoteRsp(CThostFtdcForQuoteRspField *pForQuoteRsp);
 private:
  intgo go_val;
  Swig_memory *swig_mem;
};

#endif
